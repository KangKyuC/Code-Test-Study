★★★코테 문제 적응 안됨.. 문제가 뭘 말하는 지 모르겠어서 해석 먼저하기~~


첫째줄에, 집합 A의 원소 갯수, B의 원소 갯수
둘째줄에, A의 원소값들
셋째줄에, B의 원소값들

근데 원소갯수가 20만개, 모든 원소의 값이 1억///을 넘지 않는다. ---> Q. 여기서 궁금한 점. A랑 B의 값은 정해줬는데 왜 이런 말을 덧붙이는지 궁금.


표현	                                        진짜 의미	왜 중요해?
"20만 개 넘지 않음"	         ------>               숫자가 엄청 많이 들어올 수 있음/	코드는 빨라야 해! 느리면 시간초과
"숫자는 1억보다 작음"	       ------>          숫자 하나가 매우 클 수 있음	배열처럼 1억 칸짜리 만들면 메모리 터짐


지피티의 말을 빌려 본 직관적인 의미는,

“이 문제, 무식하게 풀면 터져요!
똑똑하게 풀어야 해요! (set 쓰세요~)”
======================================

                          
★★★★이 문제를 풀기위한 필요한 선행 개념은??


1. 집합(set)
리스트[]처럼 값을 모아둔 것.
--------------> 리스트[] 와의 차이점: 셋{}는 중복제거로 연산속도 빠름. 하지만 순서는 없음.


set의 예시
========================
a = set([1, 2, 2, 3])
print(a)
# {1, 2, 3} ← 중복 사라짐!
========================


--------------------> Q. 여기서 또 궁금.  set은 set([])를 말하는건지, {}를 말하는건지?
- 빈 set 만들 땐 set() 쓰자!
- {}은 빈 딕셔너리. 아예 뜻이 다름.


2. 대칭 차집합 (symmetric difference)
A 또는 B 중에 하나에만 있는 숫자들
A-B

처음엔 그냥 print(A - B)로 바로 출력하면되지않을까 생각했지만 지피티가 개념을 알려주면서 변수를 씌움.
result = A-B
print(result) 로.

지피티는 가독성과 추후 코드 재사용에 용이하다고 변수사용하는걸 권장함.


3. len()
몇개 들어있는지 세주는 역할.
근데 len()은 0부터 세지않음.. 인덱스랑 다른 개념.
인덱스는 위치, len은 몇갠지.



★★★다시 문풀로 돌아가서 슈도코딩★★★

1. 첫 줄에서 A와 B의 원소 개수 두 개를 입력받는다.
2. 두 번째 줄에서 A의 원소들을 입력받고 set A로 만든다.
3. 세 번째 줄에서 B의 원소들을 입력받고 set B로 만든다.
4. A와 B의 대칭 차집합을 구한다. (겹치는 건 빼고 각자만 있는 애들만 남긴다.)
5. 그 집합의 길이를 출력한다.



--------------------> Q. 그냥 int를 쓰는상황이랑 map(int)를 쓰는 상황이랑 뭐가 다른지?
map(int, input().split() 다수의 문자를 숫자로 변환할 때 사용함.
int(input()) 하나의 문자를 숫자로 변환할 때 사용함.
