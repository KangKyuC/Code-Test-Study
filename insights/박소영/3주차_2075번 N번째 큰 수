★문제 요약★

표에는 총 25개의 숫자가 있다.
→ (5행 × 5열 = 25개)

이 중에서,
5번째로 큰 수를 구하시오. (N=5니까)



★문제 진짜 의도★

전체 25개의 숫자 중에서
5번째로 큰 수를 찾아서 출력해! 

전부 저장해서 정렬하면 메모리가 뻑날 수도 있다...

★전략: 큰 수 N개만 유지하면서 버리는 방식


★이 문제에 필요한 개념★

1. heapq — 파이썬의 우선순위 큐(힙) 라이브러리
이 문제는 모든 수 중에서 N번째로 큰 수를 구해야 하기 때문에,
수를 정렬하거나, 큐처럼 관리할 자료구조가 필요해.
그 역할을 해주는 게 바로 힙!

   ***heapq의 특징
   파이썬의 heapq는 기본이 '최소 힙(min-heap)'
   즉, 항상 가장 작은 값이 맨 위에 있어.
====================================
  import heapq

  heap = []
  heapq.heappush(heap, 10)  # 넣기(10)
  heapq.heappop(heap)       # 빼기(힙에서 가장 작은 값 꺼내기)
 ====================================


★★★슈도코드★★★

1.힙을 만든다
(기본이 작은 값이 먼저 나오는 '최소 힙')

2.숫자를 하나씩 힙에 넣는다.

3.만약 힙에 N개보다 많아지면?
  제일 작은 값을 제거해버린다!

★이중 for문(=중첩 for문)의 동작 원리 간단 설명★

==========================================================
matrix = [
    [1, 2, 3],
    [4, 5, 6]            # 개념설명에서 matrix에 딕셔너리 안쓰고 리스트를 한개 더 썼네?
]

for row in matrix:        # 먼저 한 줄(row)을 꺼내
    for item in row:      # 그 줄에서 다시 한 칸(item)씩 꺼내
        print(item)
==========================================================

출력은 세로로 나옴. print(item)가 항상 하나 출력후 다음 줄에서 출력하기 떄문에.
1
2
3
4
5
6

가로 출력 희망시 print(item, end=" ")을 써야함. 1 2 3 4 5 6 


★아까 위에서 matrix에 딕셔너리 안쓰고 리스트를 한개 더 쓴 상황 설명★
=>2차원 리스트  matrix = [[1, 2, 3], [4, 5, 6]]

matrix[0][2]중에 
[0]이 젤 위에 있는 리스트인 [1,2,3]을 말하는거고, 
[2]는 그중에서 세번째인 3을 얘기하는건지?

===> 맞다! 1행 3열의 값인 3을 칭한다.



***왜 딕셔너리를 안 썼냐면?
이건 "순서대로 행렬을 다루기" 위한 상황이기 때문.
리스트는 순서대로 들어간 값을 [인덱스]로 꺼낼 수 있어.

2차원 리스트는 표 형태로 처리하기에 딱 좋아.
리스트는 순서가 중요할 때, 딕셔너리는 키(이름:박소영)를 사용할 때!
2차원 리스트는 딕셔너리랑은 용도도, 생김새도 다르지만 비슷한 느낌의 자료구조.


***2차원 리스트에서 가로로 쓰거나, 세로로 쓰거나 값은 똑같은지?
===> 똑같다! 똑같이 인지함.



대박 신기한 개념 겟챠

★★★이중 리스트 순회(=2차원 리스트의 행 순회)
 2차원 리스트(matrix)의 각 '행(row)'을 순서대로 꺼내는 반복문


=======================================================
 예제 구조)
 matrix = [
  [1, 2, 3],   ← 행 0
  [4, 5, 6]    ← 행 1
]

for row in matrix:         # 이게 행 단위 순회
    for item in row:       # 이게 열 단위 순회
        print(item)
=======================================================

행 0을 먼저 꺼내고 세로로 출력, 행 1을 꺼내고 세로로 출력.
완전 지니어스.


## 🔥 내가 이해한 파이썬 리스트 반복 슈퍼파워 정리

| 개념                | 설명 |
|---------------------|------|
| **2차원 리스트**    | 리스트 안에 리스트가 들어간 구조. 예: `[[1, 2, 3], [4, 5, 6]]` |
| `matrix[0][2]`      | 0번째 줄(행)의 2번째 칸(열) → 숫자 하나를 꺼냄. 예: `3` |
| `for row in matrix` | 2차원 리스트의 행(줄)을 하나씩 꺼내는 반복문 |
| `for item in row`   | 꺼낸 행 안의 요소(칸, 열)를 하나씩 꺼내는 반복문 |
| **이중 for문**      | 표처럼 생긴 리스트를 한 칸씩 전부 순회할 수 있음. |

> 💡 쉽게 말해:  
> 큰 박스 안에 작은 박스가 있고,  
> 줄(행)을 하나씩 꺼내고 → 그 안에서 칸(열)을 하나씩 꺼내는 구조!



역시 천천히 차분히 공 들여서 구문 하나하나 파헤치는게 재밌구만.



